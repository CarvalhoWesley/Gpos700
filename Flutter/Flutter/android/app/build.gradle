def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')

if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    // lintOptions {
    //     disable 'InvalidPackage'
    // }
    
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.flutter_gertec"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        gertec {
            storeFile file('..\\..\\Chaves\\Development_GertecDeveloper_CustomerAPP.jks')
            storePassword 'Development@GertecDeveloper2018'
            keyAlias 'developmentgertecdeveloper_customerapp'
            keyPassword 'Development@GertecDeveloper2018'
        }
    }

    buildTypes {
        // release {
        //     minifyEnabled false
        //     useProguard false
        //     shrinkResources false
        //     proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        //     signingConfig signingConfigs.gertec
        // }
        debug {
            signingConfig signingConfigs.gertec
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(name: 'payment-1.14.10.181016', ext: 'aar')
    implementation(name: 'SatGerLib', ext: 'aar')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'
    implementation 'com.google.zxing:core:3.2.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.google.code.gson:gson:2.8.6'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.android.support:multidex:2.0.1'
}
